{"version":3,"sources":["utils/index.js","components/chart.js","components/basicInfo.js","components/detailedInfo.js","components/forecastContainer.js","App.js","index.js"],"names":["listOfCities","name","image","iconUrls","getIconDescription","weather","code","description","src","timeSince","ms","minutes","Math","floor","Date","now","hours","Chart","props","width","height","d","className","fill","opacity","stroke","strokeWidth","basicInfo","state","updatedAgo","lastUpdated","refreshData","a","currentCity","fetchWeather","setState","this","timer","setInterval","clearInterval","today","round","temp","alt","viewBox","preserveAspectRatio","onClick","Component","rh","dewpt","uv","vis","toFixed","days","months","cities","forecast","onFetchWeather","forecastList","map","day","datetime","getDay","month","ob_time","getMonth","slice","style","backgroundImage","key","city","API_KEY","FORECAST_URL","TODAY_URL","App","newCityList","reverse","Promise","all","axios","get","encodeURI","data","scrollY","scrollX","$","document","querySelector","bind","cursor","createElement","setAttribute","appendChild","onmousemove","e","top","pageY","left","pageX","onscroll","window","pageYOffset","pageXOffset","addEventListener","clientY","clientX","body","parentElement","removeChild","rootElement","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.a54285df.chunk.js","sourcesContent":["export const listOfCities = [\n  {\n    name: \"Belgrade\",\n    image:\n      \"https://uploads.codesandbox.io/uploads/user/1e54e5e8-919a-492b-b649-7773dcf409ea/Q7QA-bg.jpg\"\n  },\n  {\n    name: \"Novi Sad\",\n    image:\n      \"https://uploads.codesandbox.io/uploads/user/1e54e5e8-919a-492b-b649-7773dcf409ea/TIRH-ns.jpg\"\n  }\n];\n\nexport const iconUrls = {\n  cloud:\n    \"https://uploads.codesandbox.io/uploads/user/1e54e5e8-919a-492b-b649-7773dcf409ea/xb6a-cloud.svg\",\n  cloudy:\n    \"https://uploads.codesandbox.io/uploads/user/1e54e5e8-919a-492b-b649-7773dcf409ea/sq-o-cloudy.svg\",\n  moon:\n    \"https://uploads.codesandbox.io/uploads/user/1e54e5e8-919a-492b-b649-7773dcf409ea/lFvW-moon.svg\",\n  rain:\n    \"https://uploads.codesandbox.io/uploads/user/1e54e5e8-919a-492b-b649-7773dcf409ea/4aoT-rain.svg\",\n  snowing:\n    \"https://uploads.codesandbox.io/uploads/user/1e54e5e8-919a-492b-b649-7773dcf409ea/aODy-snowing.svg\",\n  storm:\n    \"https://uploads.codesandbox.io/uploads/user/1e54e5e8-919a-492b-b649-7773dcf409ea/zWvz-storn.svg\",\n  sun:\n    \"https://uploads.codesandbox.io/uploads/user/1e54e5e8-919a-492b-b649-7773dcf409ea/0cip-sun.svg\",\n  refresh:\n    \"https://uploads.codesandbox.io/uploads/user/1e54e5e8-919a-492b-b649-7773dcf409ea/AXnT-refresh.svg\"\n};\n\nexport const getIconDescription = weather => {\n  const { code, description } = weather || {};\n  let src = \"\";\n  if (code >= 200 && code < 300) {\n    src = iconUrls.storm;\n  } else if (code >= 300 && code < 600) {\n    src = iconUrls.rain;\n  } else if ((code >= 600 && code < 700) || code === 900) {\n    src = iconUrls.snowing;\n  } else if ((code >= 700 && code < 800) || code === 802) {\n    src = iconUrls.cloudy;\n  } else if (code === 800 || code === 801) {\n    src = iconUrls.sun;\n  } else {\n    src = iconUrls.cloud;\n  }\n  return { src, description };\n};\n\nexport const timeSince = ms => {\n  const minutes = Math.floor((Date.now() - ms) / (60 * 1000));\n  const hours = Math.floor(minutes / 60);\n  if (hours > 1) {\n    return hours + \" hours\";\n  }\n  return minutes + \" minutes\";\n};\n","import React from \"react\";\n\nconst Chart = props => (\n  <svg width={500} height={500} {...props}>\n    <path\n      d=\"M0 329.227c62.942-30.873 113.921-34.434 152.938-10.683 58.524 35.626 90.4 54.667 136.495 61.792 46.094 7.126 129.056-22.81 156.126-19.888 18.047 1.948 36.194 6.46 54.441 13.537V500H0V329.227z\"\n      className=\"shape\"\n      fill=\"#FFF\"\n      opacity={0.2}\n    />\n    <path\n      d=\"M0 386.78c41.094-12.664 68.782-16.407 83.064-11.231 21.423 7.764 32.074 15.816 67.59 11.23 35.517-4.585 88.176-74.02 152.284-74.02 64.109 0 66.209 34.567 117.873 34.567 34.443 0 60.84-9.6 79.189-28.798V500H0V386.78z\"\n      className=\"shape\"\n      fill=\"#FFF\"\n      opacity={0.4}\n    />\n    <path\n      d=\"M0 386.78c41.094-12.664 68.782-16.407 83.064-11.231 21.423 7.764 32.074 15.816 67.59 11.23 35.517-4.585 88.176-74.02 152.284-74.02 64.109 0 66.209 34.567 117.873 34.567 34.443 0 60.84-9.6 79.189-28.798\"\n      className=\"line\"\n      stroke=\"#FFF\"\n      strokeWidth={3}\n    />\n  </svg>\n);\n\nexport default Chart;\n","import React, { Component } from \"react\";\nimport Chart from \"./chart.js\";\nimport { getIconDescription, timeSince, iconUrls } from \"../utils\";\n\nclass basicInfo extends Component {\n  state = { updatedAgo: timeSince(this.props.lastUpdated) };\n\n  componentDidMount() {\n    const { lastUpdated } = this.props;\n    this.timer = setInterval(() => {\n      this.setState({ updatedAgo: timeSince(lastUpdated) });\n    }, 60 * 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timer);\n  }\n\n  refreshData = async () => {\n    const { currentCity, lastUpdated, fetchWeather } = this.props;\n    await fetchWeather(currentCity);\n    this.setState({ updatedAgo: timeSince(lastUpdated) });\n  };\n\n  render() {\n    const { today, lastUpdated } = this.props;\n    const { src, description } = getIconDescription(today.weather);\n    return (\n      <div className=\"basic\">\n        <div className=\"box current\">\n          <span className=\"value\">{Math.round(today.temp)}°</span>\n          <span className=\"description\">{description}</span>\n        </div>\n        <div className=\"box\">\n          <div className=\"icon\">\n            <img src={src} alt={description} />\n          </div>\n        </div>\n        <div className=\"animate-graph\">\n          <Chart viewBox=\"0 240 500 500\" preserveAspectRatio=\"none\" />\n        </div>\n        <div className=\"refresh description\" onClick={this.refreshData}>\n          <img src={iconUrls.refresh} width={18} alt={description} />\n          Updated <span className=\"value\">{timeSince(lastUpdated)}</span> ago\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default basicInfo;\n","import React from \"react\";\n\nexport default ({ today }) => {\n  const { rh, dewpt, uv, vis } = today;\n  return (\n    <div className=\"details\">\n      <div className=\"box\">\n        <span className=\"value\">{rh}%</span>\n        <span className=\"description\">Humidity</span>\n      </div>\n      <div className=\"box\">\n        <span className=\"value\">{dewpt}°</span>\n        <span className=\"description\">Dew Pt.</span>\n      </div>\n      <div className=\"box\">\n        <span className=\"value\">{Math.round(uv)}/10</span>\n        <span className=\"description\">UV Index</span>\n      </div>\n      <div className=\"box\">\n        <span className=\"value\">{vis && vis.toFixed(1)} km</span>\n        <span className=\"description\">Visibility</span>\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { getIconDescription } from \"../utils\";\n\nconst days = [\"SUN\", \"MON\", \"TUE\", \"WED\", \"THU\", \"FRI\", \"SAT\"];\nconst months = [\n  \"January\",\n  \"February\",\n  \"March\",\n  \"April\",\n  \"May\",\n  \"June\",\n  \"July\",\n  \"August\",\n  \"September\",\n  \"October\",\n  \"November\",\n  \"December\"\n];\n\nexport default ({ cities, currentCity, forecast, today, onFetchWeather }) => {\n  const forecastList = forecast.map(d => {\n    const { src, description } = getIconDescription(d.weather);\n    const day = days[new Date(d.datetime).getDay()];\n    return (\n      <div className=\"forecast\">\n        <div className=\"center\">\n          <span className=\"value\">{d.temp}°</span>\n        </div>\n        <div className=\"edge\">\n          <img className=\"icon\" src={src} alt={description} />\n          {day}\n        </div>\n      </div>\n    );\n  });\n  const month = months[new Date(today.ob_time).getMonth()];\n  const day = today.ob_time && today.ob_time.slice(8, 10);\n  const style = { backgroundImage: `url(${currentCity.image})` };\n  return (\n    <div key={currentCity.image} className=\"forecast-container\">\n      <div className=\"forecast-bg\" style={style} />\n      <div className=\"header\">\n        <div className=\"location\">\n          <div className=\"dropdown\">\n            {cities.map(city => (\n              <h2 className=\"city\" onClick={() => onFetchWeather(city)}>\n                {city.name}\n              </h2>\n            ))}\n          </div>\n          <i className=\"arrow\" />\n        </div>\n        <p className=\"date\">\n          {day} {month}\n        </p>\n      </div>\n\n      <div className=\"forecast-table\">\n        <div className=\"forecast-bg-blur\" style={style} />\n        {forecastList}\n      </div>\n    </div>\n  );\n};\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { listOfCities } from \"./utils\";\n\nimport BasicInfo from \"./components/basicInfo\";\nimport DetailedInfo from \"./components/detailedInfo\";\nimport ForecastContainer from \"./components/forecastContainer\";\n\nconst API_KEY = \"32843ca13f7643a0a3b844866635faf1\";\nconst FORECAST_URL = `https://api.weatherbit.io/v2.0/forecast/daily?key=${API_KEY}&days=7&city=`;\nconst TODAY_URL = `https://api.weatherbit.io/v2.0/current?key=${API_KEY}&city=`;\n\nclass App extends Component {\n  state = {\n    cities: [...listOfCities],\n    currentCity: listOfCities[0],\n    forecast: [],\n    today: {},\n    lastUpdated: Date.now()\n  };\n\n  componentDidMount() {\n    const { currentCity } = this.state;\n    this.fetchWeather(currentCity);\n  }\n\n  fetchWeather = async city => {\n    const { cities, currentCity } = this.state;\n    let newCityList = [...cities];\n    if (city.name !== currentCity.name) {\n      newCityList.reverse();\n    }\n    try {\n      const [forecast, today] = await Promise.all([\n        axios.get(`${FORECAST_URL}${encodeURI(city.name)},rs`),\n        axios.get(`${TODAY_URL}${encodeURI(city.name)},rs`)\n      ]);\n      this.setState({\n        cities: newCityList,\n        currentCity: city,\n        forecast: forecast.data.data,\n        today: today.data.data[0],\n        lastUpdated: Date.now()\n      });\n    } catch (e) {}\n  };\n\n  render() {\n    const { cities, currentCity, today, forecast, lastUpdated } = this.state;\n    return (\n      <div className=\"container\">\n        <div className=\"info\">\n          <BasicInfo\n            today={today}\n            lastUpdated={lastUpdated}\n            currentCity={currentCity}\n            fetchWeather={this.fetchWeather}\n          />\n          <DetailedInfo today={today} />\n        </div>\n        <ForecastContainer\n          cities={cities}\n          currentCity={currentCity}\n          today={today}\n          forecast={forecast}\n          onFetchWeather={this.fetchWeather}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import App from \"./App\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles.css\";\n\nlet scrollY = 0,\n  scrollX = 0;\nconst $ = document.querySelector.bind(document);\n\nconst cursor = document.createElement(\"div\");\ncursor.setAttribute(\"id\", \"cursor\");\n$(\"body\").appendChild(cursor);\n\ndocument.onmousemove = function(e) {\n  cursor.style.top = e.pageY - scrollY + \"px\";\n  cursor.style.left = e.pageX - scrollX + \"px\";\n};\ndocument.onscroll = function(e) {\n  scrollY = window.pageYOffset;\n  scrollX = window.pageXOffset;\n};\n\nfunction clickEffect(e) {\n  var d = document.createElement(\"div\");\n  d.className = \"clickEffect\";\n  d.style.top = e.clientY + \"px\";\n  d.style.left = e.clientX + \"px\";\n  document.body.appendChild(d);\n  d.addEventListener(\"animationend\", function() {\n    d.parentElement.removeChild(d);\n  });\n}\n\ndocument.addEventListener(\"click\", clickEffect);\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}